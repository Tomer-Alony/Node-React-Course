{"version":3,"sources":["components/StripeWrapper.js","actions/index.js","actions/types.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["StripeWrapper","dispatch","useDispatch","name","description","amount","token","a","axios","post","data","type","payload","handleToken","stripeKey","process","className","Header","user","useSelector","state","auth","to","href","key","style","margin","credits","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","useEffect","get","exact","path","component","combineReducers","store","createStore","reducers","compose","applyMiddleware","reduxThunk","window","devToolsExtension","f","ReactDOM","render","document","querySelector","console","log"],"mappings":"uRAoBeA,EAfO,WACpB,IAAMC,EAAWC,cACjB,OACE,kBAAC,IAAD,CACEC,KAAK,SACLC,YAAY,yBACZC,OAAQ,IACRC,MAAO,SAACA,GAAD,OAAWL,ECJG,SAACK,GAAD,8CAAW,WAAOL,GAAP,iBAAAM,EAAA,sEACbC,IAAMC,KAAK,cAAeH,GADb,gBAC5BI,EAD4B,EAC5BA,KACRT,EAAS,CAAEU,KCVa,aDUKC,QAASF,IAFF,2CAAX,sDDIMG,CAAYP,KACvCQ,UAAWC,8CAEX,4BAAQC,UAAU,OAAlB,iBG6BSC,EAvCA,WACb,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QA0B1C,OACE,6BACE,yBAAKL,UAAU,eACb,kBAAC,IAAD,CAAMM,GAAIJ,EAAO,WAAa,IAAKF,UAAU,mBAA7C,UAGA,wBAAIA,UAAU,SA/BE,WACpB,OAAQE,GACN,KAAK,KACH,OACF,KAAK,EACH,OACE,4BACE,uBAAGK,KAAK,gBAAR,qBADF,KAIJ,QACE,MAAO,CACL,wBAAIC,IAAI,KACN,kBAAC,EAAD,OAEF,wBAAIA,IAAI,IAAIC,MAAO,CAAEC,OAAQ,WAA7B,YACYR,EAAKS,SAEjB,wBAAIH,IAAI,KACN,uBAAGD,KAAK,eAAR,aAYmBK,OC3BhBC,EATC,WACd,OACE,yBAAKJ,MAAO,CAAEK,UAAW,WACvB,sCACA,6DCAAC,EAAY,kBAAM,0CAClBC,EAAY,kBAAM,0CAsBTC,EApBH,WACV,IAAMhC,EAAWC,cAKjB,OAJAgC,qBAAU,WACRjC,EJTqB,uCAAM,WAAOA,GAAP,iBAAAM,EAAA,sEACNC,IAAM2B,IAAI,qBADJ,gBACrBzB,EADqB,EACrBA,KACRT,EAAS,CAAEU,KCLa,aDKKC,QAASF,IAFT,2CAAN,yDIUpB,IAGD,yBAAKM,UAAU,aACb,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,WAAWC,UAAWP,IACxC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,eAAeC,UAAWN,QCnBvCO,cAAgB,CAC7BlB,KCFa,WAA4C,IAAlCD,EAAiC,uDAAzB,KAAyB,yCAAjBT,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC7C,OAAQD,GACN,ILJsB,aKKpB,OAAOC,IAAW,EACpB,QACE,OAAOQ,MCGPoB,EAAQC,YACZC,EACA,GACAC,YACEC,YAAgBC,KAChBC,OAAOC,kBAAoBD,OAAOC,oBAAsB,SAACC,GAAD,OAAOA,KAInEC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,GACf,kBAAC,EAAD,OAEFW,SAASC,cAAc,UAGzBC,QAAQC,IAAIvC,gB","file":"static/js/main.ebe8d62c.chunk.js","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { useDispatch } from 'react-redux';\nimport { handleToken } from '../actions';\n\nconst StripeWrapper = () => {\n  const dispatch = useDispatch();\n  return (\n    <StripeCheckout\n      name='Emaily'\n      description='5$ for 5 email credits'\n      amount={500}\n      token={(token) => dispatch(handleToken(token))}\n      stripeKey={process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY}\n    >\n      <button className='btn'>Add Credits</button>\n    </StripeCheckout>\n  );\n};\n\nexport default StripeWrapper;\n","import axios from 'axios';\nimport { FETCH_USER } from './types';\n\nexport const fetchUser = () => async (dispatch) => {\n  const { data } = await axios.get('/api/current_user');\n  dispatch({ type: FETCH_USER, payload: data });\n};\n\nexport const handleToken = (token) => async (dispatch) => {\n  const { data } = await axios.post('/api/stripe', token);\n  dispatch({ type: FETCH_USER, payload: data });\n};\n","export const FETCH_USER = 'fetch_user';\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport StriperWrapper from './StripeWrapper';\n\nconst Header = () => {\n  const user = useSelector((state) => state.auth);\n  const renderContent = () => {\n    switch (user) {\n      case null:\n        return;\n      case false:\n        return (\n          <li>\n            <a href='/auth/google'>Login With Google</a>;\n          </li>\n        );\n      default:\n        return [\n          <li key='1'>\n            <StriperWrapper />\n          </li>,\n          <li key='3' style={{ margin: '0 10px' }}>\n            Credits: {user.credits}\n          </li>,\n          <li key='2'>\n            <a href='/api/logout'>Logout</a>\n          </li>,\n        ];\n    }\n  };\n\n  return (\n    <nav>\n      <div className='nav-wrapper'>\n        <Link to={user ? '/surveys' : '/'} className='left brand-logo'>\n          Emaily\n        </Link>\n        <ul className='right'>{renderContent()}</ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Landing = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Emaily</h1>\n      <h5>Collect feedback from users</h5>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Landing, Header } from './';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../actions';\n\nconst Dashboard = () => <h2>Dashboard</h2>;\nconst SurveyNew = () => <h2>SurveyNew</h2>;\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actions.fetchUser());\n  }, []);\n\n  return (\n    <div className='container'>\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/surveys' component={Dashboard} />\n          <Route exact path='/surveys/new' component={SurveyNew} />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n});\n","import { FETCH_USER } from '../actions/types';\n\nexport default function (state = null, { type, payload }) {\n  switch (type) {\n    case FETCH_USER:\n      return payload || false;\n    default:\n      return state;\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(\n  reducers,\n  {},\n  compose(\n    applyMiddleware(reduxThunk),\n    window.devToolsExtension ? window.devToolsExtension() : (f) => f\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\nconsole.log(process.env.NODE_ENV);\n"],"sourceRoot":""}